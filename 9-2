{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"9-2","provenance":[],"authorship_tag":"ABX9TyOkGDcqwoeytt8g/boL/zBG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l_yJ5iZq5eYi","executionInfo":{"status":"ok","timestamp":1628210722263,"user_tz":-540,"elapsed":8742,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"08a3e278-1309-448a-ccb7-17c11c12a920"},"source":["from tensorflow.keras.datasets import imdb\n","(train_input, train_target), (test_input, test_target) = imdb.load_data(\n","    num_words = 500)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n","17465344/17464789 [==============================] - 0s 0us/step\n"],"name":"stdout"},{"output_type":"stream","text":["<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:155: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:156: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o3DrEwe766gr","executionInfo":{"status":"ok","timestamp":1628210727427,"user_tz":-540,"elapsed":253,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"94a8be7b-e06d-4194-dfcc-98a1f2e0bf81"},"source":["print(train_input.shape, test_input.shape)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["(25000,) (25000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"escSqtqI7AWC","executionInfo":{"status":"ok","timestamp":1628210838820,"user_tz":-540,"elapsed":7,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"0f82f5e2-c567-42cd-9b06-976c103c9ece"},"source":["print(len(train_input[0]))"],"execution_count":3,"outputs":[{"output_type":"stream","text":["218\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xcUVNIpr7btd","executionInfo":{"status":"ok","timestamp":1628210847981,"user_tz":-540,"elapsed":241,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"6d49daea-bd61-43fd-dc41-49ae8a259ff4"},"source":["print(len(train_input[1]))"],"execution_count":4,"outputs":[{"output_type":"stream","text":["189\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BLImkRrW7dzb","executionInfo":{"status":"ok","timestamp":1628211160708,"user_tz":-540,"elapsed":254,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"5b7be8ac-8532-405b-b874-efd6b70eff37"},"source":["print(train_input[0])"],"execution_count":5,"outputs":[{"output_type":"stream","text":["[1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wOQ24xeD8qQC","executionInfo":{"status":"ok","timestamp":1628211245257,"user_tz":-540,"elapsed":244,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"73a8baf5-c6d6-4721-9dfc-20ebff9f3e2f"},"source":["print(train_target[: 20])"],"execution_count":6,"outputs":[{"output_type":"stream","text":["[1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 1]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pvtevSXY8-zf","executionInfo":{"status":"ok","timestamp":1628211413381,"user_tz":-540,"elapsed":249,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["from sklearn.model_selection import train_test_split\n","train_input, val_input, train_target, val_target = train_test_split(\n","    train_input, train_target, test_size = 0.2, random_state = 42)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"KPMMJxll9n8P","executionInfo":{"status":"ok","timestamp":1628211503316,"user_tz":-540,"elapsed":239,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["import numpy as np\n","lengths = np.array([len(x) for x in train_input])"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k4r1-KoP995q","executionInfo":{"status":"ok","timestamp":1628211515899,"user_tz":-540,"elapsed":253,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"59caf5f7-8204-4187-9fd3-11895d3225d6"},"source":["print(np.mean(lengths), np.median(lengths))"],"execution_count":9,"outputs":[{"output_type":"stream","text":["239.00925 178.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"hbxPSbbf-A6y","executionInfo":{"status":"ok","timestamp":1628211579392,"user_tz":-540,"elapsed":279,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"50e8b3f6-6f05-4503-a1bf-bbf81ca85958"},"source":["import matplotlib.pyplot as plt\n","plt.hist(lengths)\n","plt.xlabel('length')\n","plt.ylabel('frequency')\n","plt.show()"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"LmjczvNu-Qdx","executionInfo":{"status":"ok","timestamp":1628211703050,"user_tz":-540,"elapsed":617,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["from tensorflow.keras.preprocessing.sequence import pad_sequences\n","train_seq = pad_sequences(train_input, maxlen = 100)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HyHamPnX-ukf","executionInfo":{"status":"ok","timestamp":1628211715972,"user_tz":-540,"elapsed":243,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"24f4e9e4-fb72-48d2-c7ff-5c0d6db65794"},"source":["print(train_seq.shape)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["(20000, 100)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yjQppSZK-x0V","executionInfo":{"status":"ok","timestamp":1628211763615,"user_tz":-540,"elapsed":4,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"eb82b6bc-ebaf-446d-e252-45e1b53177f2"},"source":["print(train_seq[0])"],"execution_count":13,"outputs":[{"output_type":"stream","text":["[ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n","   5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n","  76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n","   2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n","   2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n","   6   2  46   7  14  20  10  10 470 158]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xyx-tHrM-9eW","executionInfo":{"status":"ok","timestamp":1628211798370,"user_tz":-540,"elapsed":239,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"fe50f389-2f61-4b24-8ffa-ca62dfdf3977"},"source":["print(train_input[0][-10 :])"],"execution_count":14,"outputs":[{"output_type":"stream","text":["[6, 2, 46, 7, 14, 20, 10, 10, 470, 158]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NbYrdxTV_F7k","executionInfo":{"status":"ok","timestamp":1628211911868,"user_tz":-540,"elapsed":242,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"6c7693c0-943e-47fa-c39c-63a49d8a7a40"},"source":["print(train_seq[5])"],"execution_count":15,"outputs":[{"output_type":"stream","text":["[  0   0   0   0   1   2 195  19  49   2   2 190   4   2 352   2 183  10\n","  10  13  82  79   4   2  36  71 269   8   2  25  19  49   7   4   2   2\n","   2   2   2  10  10  48  25  40   2  11   2   2  40   2   2   5   4   2\n","   2  95  14 238  56 129   2  10  10  21   2  94 364 352   2   2  11 190\n","  24 484   2   7  94 205 405  10  10  87   2  34  49   2   7   2   2   2\n","   2   2 290   2  46  48  64  18   4   2]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fc-yi32h_hfy","executionInfo":{"status":"ok","timestamp":1628211972105,"user_tz":-540,"elapsed":251,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["val_seq = pad_sequences(val_input, maxlen = 100)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"57cWcdNz_wWZ","executionInfo":{"status":"ok","timestamp":1628212470751,"user_tz":-540,"elapsed":613,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["from tensorflow import keras\n","model = keras.Sequential()\n","model.add(keras.layers.SimpleRNN(8, input_shape = (100, 500)))\n","model.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"PzaoeoUrBqAC","executionInfo":{"status":"ok","timestamp":1628212656583,"user_tz":-540,"elapsed":2799,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["train_oh = keras.utils.to_categorical(train_seq)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_MKV4b-HCW1b","executionInfo":{"status":"ok","timestamp":1628212663147,"user_tz":-540,"elapsed":243,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"c241031f-9ca2-4619-f8ed-e89a23dcc5f8"},"source":["print(train_oh.shape)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["(20000, 100, 500)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"scSGZKhxCZAq","executionInfo":{"status":"ok","timestamp":1628213535037,"user_tz":-540,"elapsed":322,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"ef97c48c-6b83-4bb3-af29-35191b305c4e"},"source":["print(train_oh[0][0][:12])"],"execution_count":20,"outputs":[{"output_type":"stream","text":["[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vpDf240cFt50","executionInfo":{"status":"ok","timestamp":1628213551211,"user_tz":-540,"elapsed":249,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"36fd999a-dd95-4b54-c443-bffe69670c1b"},"source":["print(np.sum(train_oh[0][0]))"],"execution_count":21,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AdRI-sdSFxxx","executionInfo":{"status":"ok","timestamp":1628213588503,"user_tz":-540,"elapsed":878,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["val_oh = keras.utils.to_categorical(val_seq)"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EprpxaASF60y","executionInfo":{"status":"ok","timestamp":1628213610934,"user_tz":-540,"elapsed":241,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"bb8d8977-4d6e-4b64-e57a-5d21a515670b"},"source":["model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","simple_rnn (SimpleRNN)       (None, 8)                 4072      \n","_________________________________________________________________\n","dense (Dense)                (None, 1)                 9         \n","=================================================================\n","Total params: 4,081\n","Trainable params: 4,081\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tFoQ9wjYGAdM","executionInfo":{"status":"ok","timestamp":1628214280455,"user_tz":-540,"elapsed":360352,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"af4ba935-be97-472f-8742-66713ca4729c"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","              metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-simplernn-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 3,\n","                                                  restore_best_weights = True)\n","history = model.fit(train_oh, train_target, epochs = 100, batch_size = 64,\n","                    validation_data = (val_oh, val_target),\n","                    callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":24,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 14s 39ms/step - loss: 0.6935 - accuracy: 0.5257 - val_loss: 0.6866 - val_accuracy: 0.5510\n","Epoch 2/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6812 - accuracy: 0.5673 - val_loss: 0.6727 - val_accuracy: 0.5894\n","Epoch 3/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6560 - accuracy: 0.6163 - val_loss: 0.6416 - val_accuracy: 0.6304\n","Epoch 4/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6258 - accuracy: 0.6583 - val_loss: 0.6162 - val_accuracy: 0.6660\n","Epoch 5/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6008 - accuracy: 0.6855 - val_loss: 0.5948 - val_accuracy: 0.6908\n","Epoch 6/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5783 - accuracy: 0.7103 - val_loss: 0.5736 - val_accuracy: 0.7108\n","Epoch 7/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5597 - accuracy: 0.7258 - val_loss: 0.5574 - val_accuracy: 0.7270\n","Epoch 8/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5444 - accuracy: 0.7388 - val_loss: 0.5443 - val_accuracy: 0.7386\n","Epoch 9/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.5303 - accuracy: 0.7505 - val_loss: 0.5314 - val_accuracy: 0.7512\n","Epoch 10/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5175 - accuracy: 0.7595 - val_loss: 0.5200 - val_accuracy: 0.7552\n","Epoch 11/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5071 - accuracy: 0.7678 - val_loss: 0.5181 - val_accuracy: 0.7528\n","Epoch 12/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4978 - accuracy: 0.7724 - val_loss: 0.5051 - val_accuracy: 0.7690\n","Epoch 13/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4884 - accuracy: 0.7782 - val_loss: 0.4976 - val_accuracy: 0.7700\n","Epoch 14/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4806 - accuracy: 0.7825 - val_loss: 0.4915 - val_accuracy: 0.7778\n","Epoch 15/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4738 - accuracy: 0.7867 - val_loss: 0.4900 - val_accuracy: 0.7714\n","Epoch 16/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4685 - accuracy: 0.7896 - val_loss: 0.4921 - val_accuracy: 0.7714\n","Epoch 17/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4624 - accuracy: 0.7933 - val_loss: 0.4816 - val_accuracy: 0.7776\n","Epoch 18/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4577 - accuracy: 0.7965 - val_loss: 0.4856 - val_accuracy: 0.7754\n","Epoch 19/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4533 - accuracy: 0.7976 - val_loss: 0.4738 - val_accuracy: 0.7844\n","Epoch 20/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4482 - accuracy: 0.8016 - val_loss: 0.4711 - val_accuracy: 0.7818\n","Epoch 21/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4443 - accuracy: 0.8026 - val_loss: 0.4678 - val_accuracy: 0.7862\n","Epoch 22/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4412 - accuracy: 0.8040 - val_loss: 0.4704 - val_accuracy: 0.7802\n","Epoch 23/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4378 - accuracy: 0.8066 - val_loss: 0.4638 - val_accuracy: 0.7878\n","Epoch 24/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4346 - accuracy: 0.8102 - val_loss: 0.4628 - val_accuracy: 0.7860\n","Epoch 25/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4317 - accuracy: 0.8101 - val_loss: 0.4609 - val_accuracy: 0.7856\n","Epoch 26/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4295 - accuracy: 0.8101 - val_loss: 0.4611 - val_accuracy: 0.7882\n","Epoch 27/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4275 - accuracy: 0.8099 - val_loss: 0.4571 - val_accuracy: 0.7924\n","Epoch 28/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4249 - accuracy: 0.8132 - val_loss: 0.4589 - val_accuracy: 0.7884\n","Epoch 29/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4227 - accuracy: 0.8130 - val_loss: 0.4692 - val_accuracy: 0.7758\n","Epoch 30/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4207 - accuracy: 0.8142 - val_loss: 0.4605 - val_accuracy: 0.7860\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"9EBNJqSFHL_z","executionInfo":{"status":"ok","timestamp":1628214806129,"user_tz":-540,"elapsed":419,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"47404be3-e740-4fb5-826e-5906e23b6b0a"},"source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":25,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU0aaxC8KkFM","executionInfo":{"status":"ok","timestamp":1628214844554,"user_tz":-540,"elapsed":281,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"78b67175-6eeb-407a-b3ec-642f503c2f5d"},"source":["print(train_seq.nbytes, train_oh.nbytes)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["8000000 4000000000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JpSnjUDmKtls","executionInfo":{"status":"ok","timestamp":1628215678372,"user_tz":-540,"elapsed":366,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["model2 = keras.Sequential()\n","model2.add(keras.layers.Embedding(500, 16, input_length = 100))\n","model2.add(keras.layers.SimpleRNN(8))\n","model2.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJA_sAS6N5KY","executionInfo":{"status":"ok","timestamp":1628215689382,"user_tz":-540,"elapsed":363,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"db6dc724-36bf-4cee-b28d-28456bc23aef"},"source":["model2.summary()"],"execution_count":28,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 100, 16)           8000      \n","_________________________________________________________________\n","simple_rnn_1 (SimpleRNN)     (None, 8)                 200       \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1)                 9         \n","=================================================================\n","Total params: 8,209\n","Trainable params: 8,209\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FQLdCMJUN72f","executionInfo":{"status":"ok","timestamp":1628216350341,"user_tz":-540,"elapsed":45743,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"343615b3-8006-44c2-c732-c7062f95ae02"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model2.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","               metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-embedding-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 5,\n","                                                  restore_best_weights = True)\n","history = model2.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n","                     validation_data = (val_seq, val_target),\n","                     callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 8s 21ms/step - loss: 0.6484 - accuracy: 0.6320 - val_loss: 0.6881 - val_accuracy: 0.5400\n","Epoch 2/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6449 - accuracy: 0.6393 - val_loss: 0.6880 - val_accuracy: 0.5438\n","Epoch 3/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6416 - accuracy: 0.6403 - val_loss: 0.6888 - val_accuracy: 0.5426\n","Epoch 4/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6385 - accuracy: 0.6453 - val_loss: 0.6888 - val_accuracy: 0.5468\n","Epoch 5/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6352 - accuracy: 0.6485 - val_loss: 0.6894 - val_accuracy: 0.5478\n","Epoch 6/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6321 - accuracy: 0.6522 - val_loss: 0.6897 - val_accuracy: 0.5480\n","Epoch 7/100\n","313/313 [==============================] - 6s 20ms/step - loss: 0.6292 - accuracy: 0.6546 - val_loss: 0.6901 - val_accuracy: 0.5496\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"3c2rZ_kXO_-Y","executionInfo":{"status":"ok","timestamp":1628216508048,"user_tz":-540,"elapsed":27723,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"ca411ad1-3a15-4183-8cca-06d66c3d63c0"},"source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":34,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"1qNBdUy6Pusp"},"source":[""],"execution_count":null,"outputs":[]}]}