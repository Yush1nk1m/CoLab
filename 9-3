{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"9-3","provenance":[],"authorship_tag":"ABX9TyPFNoSURlbIL2IX2vrzp4vk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L4eS77ubHAaU","executionInfo":{"status":"ok","timestamp":1628768015503,"user_tz":-540,"elapsed":9418,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"e9009dc4-57ec-4095-8648-46c46134362d"},"source":["from tensorflow.keras.datasets import imdb\n","from sklearn.model_selection import train_test_split\n","(train_input, train_target), (test_input, test_target) = imdb.load_data(\n","    num_words = 500)\n","train_input, val_input, train_target, val_target = train_test_split(\n","    train_input, train_target, test_size = 0.2, random_state = 42)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n","17465344/17464789 [==============================] - 0s 0us/step\n"],"name":"stdout"},{"output_type":"stream","text":["<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:155: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:156: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"mkCVXtv_I25n","executionInfo":{"status":"ok","timestamp":1628768308270,"user_tz":-540,"elapsed":722,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["from tensorflow.keras.preprocessing.sequence import pad_sequences\n","train_seq = pad_sequences(train_input, maxlen = 100)\n","val_seq = pad_sequences(val_input, maxlen = 100)"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"hm60vM1nKAfa","executionInfo":{"status":"ok","timestamp":1628768372788,"user_tz":-540,"elapsed":858,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["from tensorflow import keras\n","model = keras.Sequential()\n","model.add(keras.layers.Embedding(500, 16, input_length = 100))\n","model.add(keras.layers.LSTM(8))\n","model.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dInk5i2EKQN0","executionInfo":{"status":"ok","timestamp":1628768429714,"user_tz":-540,"elapsed":226,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"e2282bd1-a2bd-4e7b-d71f-12cef9b2b301"},"source":["model.summary()"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 100, 16)           8000      \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 8)                 800       \n","_________________________________________________________________\n","dense (Dense)                (None, 1)                 9         \n","=================================================================\n","Total params: 8,809\n","Trainable params: 8,809\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aTv5MtFJKeRa","executionInfo":{"status":"ok","timestamp":1628769948359,"user_tz":-540,"elapsed":501559,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"90c7b7f5-d83b-4910-ae34-24d5e3cd04ed"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","              metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 3,\n","                                                  restore_best_weights = True)\n","history = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n","                    validation_data = (val_seq, val_target),\n","                    callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 13s 36ms/step - loss: 0.6930 - accuracy: 0.5063 - val_loss: 0.6926 - val_accuracy: 0.5078\n","Epoch 2/100\n","313/313 [==============================] - 11s 34ms/step - loss: 0.6912 - accuracy: 0.5631 - val_loss: 0.6905 - val_accuracy: 0.5608\n","Epoch 3/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.6876 - accuracy: 0.6112 - val_loss: 0.6853 - val_accuracy: 0.6234\n","Epoch 4/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.6765 - accuracy: 0.6388 - val_loss: 0.6650 - val_accuracy: 0.6032\n","Epoch 5/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.6253 - accuracy: 0.6856 - val_loss: 0.6056 - val_accuracy: 0.7308\n","Epoch 6/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.5856 - accuracy: 0.7462 - val_loss: 0.5829 - val_accuracy: 0.7488\n","Epoch 7/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.5652 - accuracy: 0.7594 - val_loss: 0.5651 - val_accuracy: 0.7570\n","Epoch 8/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.5479 - accuracy: 0.7682 - val_loss: 0.5495 - val_accuracy: 0.7644\n","Epoch 9/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.5314 - accuracy: 0.7736 - val_loss: 0.5342 - val_accuracy: 0.7742\n","Epoch 10/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.5156 - accuracy: 0.7798 - val_loss: 0.5178 - val_accuracy: 0.7766\n","Epoch 11/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4996 - accuracy: 0.7853 - val_loss: 0.5026 - val_accuracy: 0.7810\n","Epoch 12/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4854 - accuracy: 0.7896 - val_loss: 0.4899 - val_accuracy: 0.7864\n","Epoch 13/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4728 - accuracy: 0.7947 - val_loss: 0.4797 - val_accuracy: 0.7842\n","Epoch 14/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4627 - accuracy: 0.7957 - val_loss: 0.4720 - val_accuracy: 0.7898\n","Epoch 15/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4547 - accuracy: 0.7995 - val_loss: 0.4696 - val_accuracy: 0.7868\n","Epoch 16/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4486 - accuracy: 0.8022 - val_loss: 0.4615 - val_accuracy: 0.7938\n","Epoch 17/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4437 - accuracy: 0.8045 - val_loss: 0.4592 - val_accuracy: 0.7922\n","Epoch 18/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4393 - accuracy: 0.8064 - val_loss: 0.4578 - val_accuracy: 0.7944\n","Epoch 19/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4366 - accuracy: 0.8091 - val_loss: 0.4525 - val_accuracy: 0.7962\n","Epoch 20/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4328 - accuracy: 0.8094 - val_loss: 0.4514 - val_accuracy: 0.7968\n","Epoch 21/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4304 - accuracy: 0.8093 - val_loss: 0.4496 - val_accuracy: 0.7936\n","Epoch 22/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4283 - accuracy: 0.8092 - val_loss: 0.4480 - val_accuracy: 0.7934\n","Epoch 23/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4262 - accuracy: 0.8124 - val_loss: 0.4484 - val_accuracy: 0.7986\n","Epoch 24/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4239 - accuracy: 0.8129 - val_loss: 0.4460 - val_accuracy: 0.7994\n","Epoch 25/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4223 - accuracy: 0.8139 - val_loss: 0.4447 - val_accuracy: 0.7944\n","Epoch 26/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4207 - accuracy: 0.8149 - val_loss: 0.4456 - val_accuracy: 0.7932\n","Epoch 27/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4195 - accuracy: 0.8134 - val_loss: 0.4429 - val_accuracy: 0.8004\n","Epoch 28/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4183 - accuracy: 0.8136 - val_loss: 0.4407 - val_accuracy: 0.7972\n","Epoch 29/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4174 - accuracy: 0.8150 - val_loss: 0.4414 - val_accuracy: 0.7974\n","Epoch 30/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4165 - accuracy: 0.8148 - val_loss: 0.4449 - val_accuracy: 0.7886\n","Epoch 31/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4157 - accuracy: 0.8153 - val_loss: 0.4395 - val_accuracy: 0.7996\n","Epoch 32/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4147 - accuracy: 0.8145 - val_loss: 0.4393 - val_accuracy: 0.7970\n","Epoch 33/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4139 - accuracy: 0.8154 - val_loss: 0.4386 - val_accuracy: 0.8000\n","Epoch 34/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4130 - accuracy: 0.8155 - val_loss: 0.4372 - val_accuracy: 0.7986\n","Epoch 35/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4121 - accuracy: 0.8160 - val_loss: 0.4389 - val_accuracy: 0.7982\n","Epoch 36/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4116 - accuracy: 0.8166 - val_loss: 0.4365 - val_accuracy: 0.8002\n","Epoch 37/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4111 - accuracy: 0.8164 - val_loss: 0.4360 - val_accuracy: 0.8004\n","Epoch 38/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4105 - accuracy: 0.8169 - val_loss: 0.4368 - val_accuracy: 0.8002\n","Epoch 39/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4099 - accuracy: 0.8177 - val_loss: 0.4353 - val_accuracy: 0.8010\n","Epoch 40/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4093 - accuracy: 0.8167 - val_loss: 0.4380 - val_accuracy: 0.8024\n","Epoch 41/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4087 - accuracy: 0.8171 - val_loss: 0.4340 - val_accuracy: 0.8002\n","Epoch 42/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4082 - accuracy: 0.8172 - val_loss: 0.4331 - val_accuracy: 0.7990\n","Epoch 43/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4079 - accuracy: 0.8156 - val_loss: 0.4346 - val_accuracy: 0.8004\n","Epoch 44/100\n","313/313 [==============================] - 11s 36ms/step - loss: 0.4073 - accuracy: 0.8156 - val_loss: 0.4338 - val_accuracy: 0.7986\n","Epoch 45/100\n","313/313 [==============================] - 11s 35ms/step - loss: 0.4067 - accuracy: 0.8165 - val_loss: 0.4338 - val_accuracy: 0.7986\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"s42RFBmNOUZK","executionInfo":{"status":"ok","timestamp":1628770596170,"user_tz":-540,"elapsed":377,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"b8c18015-3d09-4be4-d9ab-94d0c19cfec6"},"source":["import matplotlib.pyplot as plt\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"AdCU7GVcSvJz","executionInfo":{"status":"ok","timestamp":1628770821393,"user_tz":-540,"elapsed":555,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["model2 = keras.Sequential()\n","model2.add(keras.layers.Embedding(500, 16, input_length = 100))\n","model2.add(keras.layers.LSTM(8, dropout = 0.3))\n","model2.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z4fnec71TmGI","executionInfo":{"status":"ok","timestamp":1628771691149,"user_tz":-540,"elapsed":456087,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"b8ed99bd-7686-4414-bf75-52af18c59cb4"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model2.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","               metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-dropout-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 3,\n","                                              restore_best_weights = True)\n","history = model2.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n","                     validation_data = (val_seq, val_target),\n","                     callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 14s 39ms/step - loss: 0.6926 - accuracy: 0.5366 - val_loss: 0.6920 - val_accuracy: 0.5686\n","Epoch 2/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.6910 - accuracy: 0.5869 - val_loss: 0.6898 - val_accuracy: 0.6288\n","Epoch 3/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6867 - accuracy: 0.6429 - val_loss: 0.6830 - val_accuracy: 0.6694\n","Epoch 4/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6696 - accuracy: 0.6797 - val_loss: 0.6449 - val_accuracy: 0.6996\n","Epoch 5/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.6191 - accuracy: 0.7082 - val_loss: 0.5994 - val_accuracy: 0.7126\n","Epoch 6/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5841 - accuracy: 0.7219 - val_loss: 0.5697 - val_accuracy: 0.7264\n","Epoch 7/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.5563 - accuracy: 0.7385 - val_loss: 0.5437 - val_accuracy: 0.7512\n","Epoch 8/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5314 - accuracy: 0.7531 - val_loss: 0.5207 - val_accuracy: 0.7654\n","Epoch 9/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5108 - accuracy: 0.7698 - val_loss: 0.5012 - val_accuracy: 0.7742\n","Epoch 10/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4938 - accuracy: 0.7774 - val_loss: 0.4871 - val_accuracy: 0.7798\n","Epoch 11/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4787 - accuracy: 0.7849 - val_loss: 0.4760 - val_accuracy: 0.7838\n","Epoch 12/100\n","313/313 [==============================] - 13s 41ms/step - loss: 0.4683 - accuracy: 0.7901 - val_loss: 0.4648 - val_accuracy: 0.7906\n","Epoch 13/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4602 - accuracy: 0.7940 - val_loss: 0.4608 - val_accuracy: 0.7914\n","Epoch 14/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4509 - accuracy: 0.7972 - val_loss: 0.4530 - val_accuracy: 0.7930\n","Epoch 15/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4477 - accuracy: 0.7990 - val_loss: 0.4493 - val_accuracy: 0.7924\n","Epoch 16/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4422 - accuracy: 0.7991 - val_loss: 0.4446 - val_accuracy: 0.7984\n","Epoch 17/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4370 - accuracy: 0.8034 - val_loss: 0.4419 - val_accuracy: 0.7996\n","Epoch 18/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4345 - accuracy: 0.8055 - val_loss: 0.4396 - val_accuracy: 0.7976\n","Epoch 19/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4323 - accuracy: 0.8030 - val_loss: 0.4378 - val_accuracy: 0.7968\n","Epoch 20/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4297 - accuracy: 0.8054 - val_loss: 0.4353 - val_accuracy: 0.8016\n","Epoch 21/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4277 - accuracy: 0.8067 - val_loss: 0.4365 - val_accuracy: 0.7958\n","Epoch 22/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4256 - accuracy: 0.8082 - val_loss: 0.4341 - val_accuracy: 0.7988\n","Epoch 23/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4241 - accuracy: 0.8079 - val_loss: 0.4313 - val_accuracy: 0.8024\n","Epoch 24/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4220 - accuracy: 0.8078 - val_loss: 0.4309 - val_accuracy: 0.8032\n","Epoch 25/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4210 - accuracy: 0.8062 - val_loss: 0.4312 - val_accuracy: 0.7990\n","Epoch 26/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4200 - accuracy: 0.8067 - val_loss: 0.4304 - val_accuracy: 0.8050\n","Epoch 27/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4184 - accuracy: 0.8087 - val_loss: 0.4294 - val_accuracy: 0.8046\n","Epoch 28/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4166 - accuracy: 0.8112 - val_loss: 0.4276 - val_accuracy: 0.8026\n","Epoch 29/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4168 - accuracy: 0.8095 - val_loss: 0.4270 - val_accuracy: 0.8024\n","Epoch 30/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4148 - accuracy: 0.8101 - val_loss: 0.4269 - val_accuracy: 0.8030\n","Epoch 31/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4151 - accuracy: 0.8138 - val_loss: 0.4273 - val_accuracy: 0.8046\n","Epoch 32/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4126 - accuracy: 0.8125 - val_loss: 0.4273 - val_accuracy: 0.7986\n","Epoch 33/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4122 - accuracy: 0.8123 - val_loss: 0.4267 - val_accuracy: 0.8048\n","Epoch 34/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4103 - accuracy: 0.8118 - val_loss: 0.4257 - val_accuracy: 0.8028\n","Epoch 35/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4116 - accuracy: 0.8119 - val_loss: 0.4256 - val_accuracy: 0.8048\n","Epoch 36/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4131 - accuracy: 0.8119 - val_loss: 0.4276 - val_accuracy: 0.8044\n","Epoch 37/100\n","313/313 [==============================] - 12s 37ms/step - loss: 0.4106 - accuracy: 0.8112 - val_loss: 0.4267 - val_accuracy: 0.8012\n","Epoch 38/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4083 - accuracy: 0.8123 - val_loss: 0.4261 - val_accuracy: 0.8022\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"fxPU7gyoVGMo","executionInfo":{"status":"ok","timestamp":1628772289157,"user_tz":-540,"elapsed":534,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"4cc24498-ae8e-40ec-a5b4-0197423d8b0b"},"source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"u9hLr_g2ZMYK","executionInfo":{"status":"ok","timestamp":1628772452191,"user_tz":-540,"elapsed":747,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["model3 = keras.Sequential()\n","model3.add(keras.layers.Embedding(500, 16, input_length = 100))\n","model3.add(keras.layers.LSTM(8, dropout = 0.3, return_sequences = True))\n","model3.add(keras.layers.LSTM(8, dropout = 0.3))\n","model3.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xfRvh2KWZ0MU","executionInfo":{"status":"ok","timestamp":1628772454850,"user_tz":-540,"elapsed":222,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"7f74e066-f7fa-4f09-8e40-31eedc949128"},"source":["model3.summary()"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 100, 16)           8000      \n","_________________________________________________________________\n","lstm_2 (LSTM)                (None, 100, 8)            800       \n","_________________________________________________________________\n","lstm_3 (LSTM)                (None, 8)                 544       \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 1)                 9         \n","=================================================================\n","Total params: 9,353\n","Trainable params: 9,353\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CtQdBvwBZ0-Y","executionInfo":{"status":"ok","timestamp":1628773977441,"user_tz":-540,"elapsed":1246816,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"fa750ecf-3985-4698-8144-9bf3f81d7e22"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model3.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","               metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-2rnn-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 3,\n","                                                  restore_best_weights = True)\n","history = model3.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n","                     validation_data = (val_seq, val_target),\n","                     callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 27s 75ms/step - loss: 0.6927 - accuracy: 0.5397 - val_loss: 0.6920 - val_accuracy: 0.6062\n","Epoch 2/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.6900 - accuracy: 0.6105 - val_loss: 0.6860 - val_accuracy: 0.6480\n","Epoch 3/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.6622 - accuracy: 0.6506 - val_loss: 0.6179 - val_accuracy: 0.6956\n","Epoch 4/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.5873 - accuracy: 0.7071 - val_loss: 0.5646 - val_accuracy: 0.7210\n","Epoch 5/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.5490 - accuracy: 0.7333 - val_loss: 0.5297 - val_accuracy: 0.7520\n","Epoch 6/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.5214 - accuracy: 0.7565 - val_loss: 0.5066 - val_accuracy: 0.7602\n","Epoch 7/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.5026 - accuracy: 0.7646 - val_loss: 0.4922 - val_accuracy: 0.7718\n","Epoch 8/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4917 - accuracy: 0.7725 - val_loss: 0.4821 - val_accuracy: 0.7746\n","Epoch 9/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4799 - accuracy: 0.7789 - val_loss: 0.4758 - val_accuracy: 0.7830\n","Epoch 10/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4725 - accuracy: 0.7828 - val_loss: 0.4714 - val_accuracy: 0.7830\n","Epoch 11/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4676 - accuracy: 0.7831 - val_loss: 0.4757 - val_accuracy: 0.7750\n","Epoch 12/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4620 - accuracy: 0.7914 - val_loss: 0.4626 - val_accuracy: 0.7866\n","Epoch 13/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4585 - accuracy: 0.7883 - val_loss: 0.4592 - val_accuracy: 0.7836\n","Epoch 14/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4569 - accuracy: 0.7910 - val_loss: 0.4577 - val_accuracy: 0.7854\n","Epoch 15/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4525 - accuracy: 0.7913 - val_loss: 0.4553 - val_accuracy: 0.7868\n","Epoch 16/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4510 - accuracy: 0.7946 - val_loss: 0.4553 - val_accuracy: 0.7854\n","Epoch 17/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4465 - accuracy: 0.7954 - val_loss: 0.4638 - val_accuracy: 0.7864\n","Epoch 18/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4466 - accuracy: 0.7966 - val_loss: 0.4520 - val_accuracy: 0.7870\n","Epoch 19/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4430 - accuracy: 0.7947 - val_loss: 0.4502 - val_accuracy: 0.7880\n","Epoch 20/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4412 - accuracy: 0.7977 - val_loss: 0.4490 - val_accuracy: 0.7896\n","Epoch 21/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4410 - accuracy: 0.7974 - val_loss: 0.4473 - val_accuracy: 0.7910\n","Epoch 22/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4409 - accuracy: 0.7969 - val_loss: 0.4469 - val_accuracy: 0.7938\n","Epoch 23/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4395 - accuracy: 0.7995 - val_loss: 0.4454 - val_accuracy: 0.7930\n","Epoch 24/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4363 - accuracy: 0.7998 - val_loss: 0.4451 - val_accuracy: 0.7892\n","Epoch 25/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4351 - accuracy: 0.8013 - val_loss: 0.4431 - val_accuracy: 0.7950\n","Epoch 26/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4352 - accuracy: 0.7996 - val_loss: 0.4427 - val_accuracy: 0.7972\n","Epoch 27/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4344 - accuracy: 0.8001 - val_loss: 0.4431 - val_accuracy: 0.7938\n","Epoch 28/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4337 - accuracy: 0.8019 - val_loss: 0.4412 - val_accuracy: 0.7962\n","Epoch 29/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4314 - accuracy: 0.8037 - val_loss: 0.4411 - val_accuracy: 0.7932\n","Epoch 30/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4291 - accuracy: 0.8041 - val_loss: 0.4404 - val_accuracy: 0.7944\n","Epoch 31/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4297 - accuracy: 0.8033 - val_loss: 0.4396 - val_accuracy: 0.7976\n","Epoch 32/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4286 - accuracy: 0.8061 - val_loss: 0.4393 - val_accuracy: 0.7950\n","Epoch 33/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4269 - accuracy: 0.8037 - val_loss: 0.4391 - val_accuracy: 0.7976\n","Epoch 34/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4276 - accuracy: 0.8031 - val_loss: 0.4394 - val_accuracy: 0.7934\n","Epoch 35/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4255 - accuracy: 0.8055 - val_loss: 0.4365 - val_accuracy: 0.7978\n","Epoch 36/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4250 - accuracy: 0.8048 - val_loss: 0.4454 - val_accuracy: 0.7962\n","Epoch 37/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4238 - accuracy: 0.8075 - val_loss: 0.4352 - val_accuracy: 0.7988\n","Epoch 38/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4239 - accuracy: 0.8059 - val_loss: 0.4363 - val_accuracy: 0.7956\n","Epoch 39/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4232 - accuracy: 0.8060 - val_loss: 0.4342 - val_accuracy: 0.8002\n","Epoch 40/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4220 - accuracy: 0.8051 - val_loss: 0.4336 - val_accuracy: 0.8000\n","Epoch 41/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4196 - accuracy: 0.8091 - val_loss: 0.4331 - val_accuracy: 0.8020\n","Epoch 42/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4216 - accuracy: 0.8075 - val_loss: 0.4328 - val_accuracy: 0.8018\n","Epoch 43/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4198 - accuracy: 0.8080 - val_loss: 0.4327 - val_accuracy: 0.8008\n","Epoch 44/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4205 - accuracy: 0.8062 - val_loss: 0.4334 - val_accuracy: 0.7982\n","Epoch 45/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4179 - accuracy: 0.8107 - val_loss: 0.4311 - val_accuracy: 0.8010\n","Epoch 46/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4182 - accuracy: 0.8090 - val_loss: 0.4306 - val_accuracy: 0.8026\n","Epoch 47/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4168 - accuracy: 0.8119 - val_loss: 0.4323 - val_accuracy: 0.8032\n","Epoch 48/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4179 - accuracy: 0.8112 - val_loss: 0.4302 - val_accuracy: 0.8014\n","Epoch 49/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4160 - accuracy: 0.8101 - val_loss: 0.4296 - val_accuracy: 0.8022\n","Epoch 50/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4144 - accuracy: 0.8102 - val_loss: 0.4299 - val_accuracy: 0.8034\n","Epoch 51/100\n","313/313 [==============================] - 23s 73ms/step - loss: 0.4156 - accuracy: 0.8109 - val_loss: 0.4294 - val_accuracy: 0.8058\n","Epoch 52/100\n","313/313 [==============================] - 23s 72ms/step - loss: 0.4151 - accuracy: 0.8092 - val_loss: 0.4292 - val_accuracy: 0.8012\n","Epoch 53/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4141 - accuracy: 0.8102 - val_loss: 0.4300 - val_accuracy: 0.7994\n","Epoch 54/100\n","313/313 [==============================] - 22s 72ms/step - loss: 0.4134 - accuracy: 0.8116 - val_loss: 0.4294 - val_accuracy: 0.8060\n","Epoch 55/100\n","313/313 [==============================] - 22s 71ms/step - loss: 0.4119 - accuracy: 0.8115 - val_loss: 0.4295 - val_accuracy: 0.8000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"pYsR_PkJa4V5","executionInfo":{"status":"ok","timestamp":1628774074407,"user_tz":-540,"elapsed":290,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"2cf6e55a-a161-4e23-942e-19d54eeb480e"},"source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Oe78-9uSgAWi","executionInfo":{"status":"ok","timestamp":1628774515105,"user_tz":-540,"elapsed":296,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}}},"source":["model4 = keras.Sequential()\n","model4.add(keras.layers.Embedding(500, 16, input_length = 100))\n","model4.add(keras.layers.GRU(8))\n","model4.add(keras.layers.Dense(1, activation = 'sigmoid'))"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_nUWFBHlhr8A","executionInfo":{"status":"ok","timestamp":1628774526568,"user_tz":-540,"elapsed":221,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"196c178f-c889-4303-c7d5-1752b058b2e2"},"source":["model4.summary()"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 100, 16)           8000      \n","_________________________________________________________________\n","gru (GRU)                    (None, 8)                 624       \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 1)                 9         \n","=================================================================\n","Total params: 8,633\n","Trainable params: 8,633\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M9dBSqk5huwy","executionInfo":{"status":"ok","timestamp":1628776416362,"user_tz":-540,"elapsed":706993,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"dd7c07fe-c615-41b0-c649-185e17fb72a9"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate = 1e-4)\n","model4.compile(optimizer = rmsprop, loss = 'binary_crossentropy',\n","               metrics = ['accuracy'])\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-gru-model.h5')\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience = 3,\n","                                                  restore_best_weights = True)\n","history = model4.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n","                     validation_data = (val_seq, val_target),\n","                     callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","313/313 [==============================] - 15s 41ms/step - loss: 0.6927 - accuracy: 0.5179 - val_loss: 0.6912 - val_accuracy: 0.5548\n","Epoch 2/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6899 - accuracy: 0.5708 - val_loss: 0.6882 - val_accuracy: 0.5892\n","Epoch 3/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6858 - accuracy: 0.5972 - val_loss: 0.6836 - val_accuracy: 0.6012\n","Epoch 4/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6795 - accuracy: 0.6152 - val_loss: 0.6767 - val_accuracy: 0.6080\n","Epoch 5/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6705 - accuracy: 0.6271 - val_loss: 0.6672 - val_accuracy: 0.6172\n","Epoch 6/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6578 - accuracy: 0.6364 - val_loss: 0.6543 - val_accuracy: 0.6330\n","Epoch 7/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6410 - accuracy: 0.6479 - val_loss: 0.6367 - val_accuracy: 0.6450\n","Epoch 8/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.6185 - accuracy: 0.6686 - val_loss: 0.6134 - val_accuracy: 0.6638\n","Epoch 9/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5863 - accuracy: 0.6898 - val_loss: 0.5786 - val_accuracy: 0.7016\n","Epoch 10/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5402 - accuracy: 0.7256 - val_loss: 0.5316 - val_accuracy: 0.7348\n","Epoch 11/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.5056 - accuracy: 0.7534 - val_loss: 0.5113 - val_accuracy: 0.7530\n","Epoch 12/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4902 - accuracy: 0.7646 - val_loss: 0.4995 - val_accuracy: 0.7570\n","Epoch 13/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4787 - accuracy: 0.7731 - val_loss: 0.4883 - val_accuracy: 0.7664\n","Epoch 14/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4695 - accuracy: 0.7785 - val_loss: 0.4814 - val_accuracy: 0.7672\n","Epoch 15/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4618 - accuracy: 0.7830 - val_loss: 0.4741 - val_accuracy: 0.7710\n","Epoch 16/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4550 - accuracy: 0.7904 - val_loss: 0.4679 - val_accuracy: 0.7766\n","Epoch 17/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4489 - accuracy: 0.7923 - val_loss: 0.4683 - val_accuracy: 0.7816\n","Epoch 18/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4437 - accuracy: 0.7962 - val_loss: 0.4588 - val_accuracy: 0.7824\n","Epoch 19/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4393 - accuracy: 0.7987 - val_loss: 0.4589 - val_accuracy: 0.7894\n","Epoch 20/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4359 - accuracy: 0.8006 - val_loss: 0.4522 - val_accuracy: 0.7846\n","Epoch 21/100\n","313/313 [==============================] - 12s 38ms/step - loss: 0.4328 - accuracy: 0.8027 - val_loss: 0.4497 - val_accuracy: 0.7884\n","Epoch 22/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4301 - accuracy: 0.8041 - val_loss: 0.4475 - val_accuracy: 0.7908\n","Epoch 23/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4281 - accuracy: 0.8067 - val_loss: 0.4482 - val_accuracy: 0.7954\n","Epoch 24/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4258 - accuracy: 0.8069 - val_loss: 0.4477 - val_accuracy: 0.7966\n","Epoch 25/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4240 - accuracy: 0.8095 - val_loss: 0.4441 - val_accuracy: 0.7924\n","Epoch 26/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4222 - accuracy: 0.8102 - val_loss: 0.4433 - val_accuracy: 0.7926\n","Epoch 27/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4210 - accuracy: 0.8109 - val_loss: 0.4437 - val_accuracy: 0.7976\n","Epoch 28/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4200 - accuracy: 0.8113 - val_loss: 0.4431 - val_accuracy: 0.7988\n","Epoch 29/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4190 - accuracy: 0.8119 - val_loss: 0.4443 - val_accuracy: 0.7974\n","Epoch 30/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4173 - accuracy: 0.8140 - val_loss: 0.4426 - val_accuracy: 0.7898\n","Epoch 31/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4171 - accuracy: 0.8135 - val_loss: 0.4402 - val_accuracy: 0.7962\n","Epoch 32/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4166 - accuracy: 0.8144 - val_loss: 0.4398 - val_accuracy: 0.7952\n","Epoch 33/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4156 - accuracy: 0.8145 - val_loss: 0.4429 - val_accuracy: 0.7928\n","Epoch 34/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4151 - accuracy: 0.8156 - val_loss: 0.4405 - val_accuracy: 0.7934\n","Epoch 35/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4144 - accuracy: 0.8150 - val_loss: 0.4390 - val_accuracy: 0.7950\n","Epoch 36/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4140 - accuracy: 0.8160 - val_loss: 0.4387 - val_accuracy: 0.7976\n","Epoch 37/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4139 - accuracy: 0.8156 - val_loss: 0.4392 - val_accuracy: 0.7952\n","Epoch 38/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4130 - accuracy: 0.8156 - val_loss: 0.4379 - val_accuracy: 0.7944\n","Epoch 39/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4126 - accuracy: 0.8149 - val_loss: 0.4375 - val_accuracy: 0.7966\n","Epoch 40/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4124 - accuracy: 0.8167 - val_loss: 0.4383 - val_accuracy: 0.7986\n","Epoch 41/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4116 - accuracy: 0.8164 - val_loss: 0.4391 - val_accuracy: 0.7982\n","Epoch 42/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4115 - accuracy: 0.8153 - val_loss: 0.4375 - val_accuracy: 0.7986\n","Epoch 43/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4108 - accuracy: 0.8171 - val_loss: 0.4385 - val_accuracy: 0.7974\n","Epoch 44/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4107 - accuracy: 0.8163 - val_loss: 0.4361 - val_accuracy: 0.7998\n","Epoch 45/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4099 - accuracy: 0.8167 - val_loss: 0.4363 - val_accuracy: 0.7998\n","Epoch 46/100\n","313/313 [==============================] - 12s 39ms/step - loss: 0.4096 - accuracy: 0.8174 - val_loss: 0.4361 - val_accuracy: 0.7994\n","Epoch 47/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4094 - accuracy: 0.8166 - val_loss: 0.4358 - val_accuracy: 0.7970\n","Epoch 48/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4095 - accuracy: 0.8160 - val_loss: 0.4349 - val_accuracy: 0.7994\n","Epoch 49/100\n","313/313 [==============================] - 13s 41ms/step - loss: 0.4091 - accuracy: 0.8167 - val_loss: 0.4341 - val_accuracy: 0.7988\n","Epoch 50/100\n","313/313 [==============================] - 13s 41ms/step - loss: 0.4085 - accuracy: 0.8176 - val_loss: 0.4341 - val_accuracy: 0.7984\n","Epoch 51/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4082 - accuracy: 0.8169 - val_loss: 0.4355 - val_accuracy: 0.7962\n","Epoch 52/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4081 - accuracy: 0.8173 - val_loss: 0.4337 - val_accuracy: 0.7992\n","Epoch 53/100\n","313/313 [==============================] - 12s 40ms/step - loss: 0.4077 - accuracy: 0.8170 - val_loss: 0.4373 - val_accuracy: 0.7986\n","Epoch 54/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4074 - accuracy: 0.8173 - val_loss: 0.4330 - val_accuracy: 0.7988\n","Epoch 55/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4069 - accuracy: 0.8170 - val_loss: 0.4330 - val_accuracy: 0.8000\n","Epoch 56/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4060 - accuracy: 0.8175 - val_loss: 0.4334 - val_accuracy: 0.8006\n","Epoch 57/100\n","313/313 [==============================] - 13s 40ms/step - loss: 0.4062 - accuracy: 0.8177 - val_loss: 0.4335 - val_accuracy: 0.7994\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"BOeE98YlmPlQ","executionInfo":{"status":"ok","timestamp":1628776607393,"user_tz":-540,"elapsed":280,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"88e44b26-1dab-495c-892f-06b760f86235"},"source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.xlabel('epoch')\n","plt.ylabel('loss')\n","plt.legend(['train', 'val'])\n","plt.show()"],"execution_count":21,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukTEjKv8plmT","executionInfo":{"status":"ok","timestamp":1628776694872,"user_tz":-540,"elapsed":11981,"user":{"displayName":"김유신","photoUrl":"","userId":"02673625700761750485"}},"outputId":"bbd814b5-0373-454f-80bd-a8bfdff32d90"},"source":["test_seq = pad_sequences(test_input, maxlen = 100)\n","rnn_model = keras.models.load_model('best-2rnn-model.h5')\n","rnn_model.evaluate(test_seq, test_target)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["782/782 [==============================] - 11s 13ms/step - loss: 0.4251 - accuracy: 0.8013\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[0.4251258969306946, 0.8013200163841248]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"2vZSNGL8p9Qs"},"source":[""],"execution_count":null,"outputs":[]}]}